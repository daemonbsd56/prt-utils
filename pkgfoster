#!/bin/bash
#
# pkgfoster 2005-11-27
# Jukka Heino <jukka@karsikkopuu.net>
#
# pkgfoster is a simple script you can use to clean up orphaned packages (i.e. 
# packages which no other package depends on). It uses prt-cache by default, so 
# remember to build the cache with "prt-get cache". You can also use normal 
# prt-get by modifying the PRT_GET variable. List of packages to keep 
# are stored in ~/.keepers. Packages from core are never considered for 
# deletion.
#

PRT_GET=prt-cache
PKGRM="sudo pkgrm"
BASE="autoconf automake bash bc bin86 bindutils binutils bison bzip2 coreutils cpio curl db dcron dhcpcd diffutils e2fsprogs ed expat file filesystem findutils flex gawk gcc gdbm gettext glibc grep groff grub gzip hdparm hotplug httpup iptables jfsutils kbd less libstdc++-compat libtool libusb lilo m4 make man man-pages mktemp module-init-tools nasm ncurses netkit-base netkit-ftp netkit-telnet net-tools nfs-utils openssh openssl patch pciutils perl pkg-config pkgutils portmap ports ppp procps prt-get psmisc rc rdate readline reiserfsprogs rpm2targz rsync sed sendmail shadow slocate strace sysfsutils sysklogd sysvinit tar tcp_wrappers tcsh time traceroute udev unzip usbutils util-linux vim wget which xfsprogs zip zlib"

touch ~/.keepers

echo "Checking packages for orphans..."

while true ; do

	RECHECK=0

	for PACKAGE in $($PRT_GET listinst) ; do

		if [ -z "$(grep ^$PACKAGE$ ~/.keepers)"                   ] && \
	           [ -z "$(echo "$BASE" | tr ' ' '\n' | grep ^$PACKAGE$)" ] && \
	           [ -z "$($PRT_GET dependent $PACKAGE)"                  ] ; then

			echo
			$PRT_GET info $PACKAGE
			echo

			echo -n "Uninstall $PACKAGE? (y/N) "
			read ANSWER

			if [ "$ANSWER" == "y" ] ; then
				$PKGRM $PACKAGE
				RECHECK=1
			else
				echo $PACKAGE >> ~/.keepers
			fi

		fi

	done

	if [ "$RECHECK" == "0" ] ; then
		exit 0
	fi

	echo
	echo "Re-checking packages for new orphans..."

done
